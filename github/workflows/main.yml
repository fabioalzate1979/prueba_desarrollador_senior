name: Master Flow

on:
  push:
    branches:
      - main
      - master
      - testing

env:
  SERVICE_NAME: prueba-desarrollador-senior
  REGION: us-central1
  GCP_PROJECT: ${{ secrets.PROJECT_ID }}

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and deploy
    outputs:
      url: ${{ steps.extract_url.outputs.url }}
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install and Build
        uses: ./.github/actions/build

      - name: Create ENV File
        run: echo ${{ secrets.ENV_PROD }} | base64 --decode > .env

      - name: Run tests with coverage
        run: |
          export $(cat .env | grep -v '^#' | xargs) && npm run test:coverage

      - name: Google Cloud authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.CM_GCP_KEY }}
          project_id: ${{ env.GCP_PROJECT }}

      - name: Set Google SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - name: Build and deploy image
        run: PROJECT_ID=${{ env.GCP_PROJECT }} COMMIT_SHA=${{ github.sha }} SERVICE_NAME=$SERVICE_NAME make deploy

      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/${{ env.GCP_PROJECT }}/$SERVICE_NAME:${{ github.sha }} \
            --allow-unauthenticated \
            --region $REGION \
            --max-instances 2

      - name: Get URL Cloud Run
        shell: bash
        run: echo "##[set-output name=url;]$(gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)')"
        id: extract_url
